# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: medhy-dohou
  labels:
    app: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
    spec:
      imagePullSecrets:
      - name: takima-school-registry
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
      containers:
      - name: api
        image: registry.gitlab.com/takima-school/images/cdb/api:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 2
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 5
          periodSeconds: 15
        env:
        - name: DB_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: db_endpoint
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: cdb.formation-cdb.credentials.postgresql.acid.zalan.do
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cdb.formation-cdb.credentials.postgresql.acid.zalan.do
              key: password
        ports:
        - containerPort: 8080
          name: api-port
---
